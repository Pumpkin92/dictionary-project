{"ast":null,"code":"var _jsxFileName = \"/Users/lucyshaw/Documents/GitHub/dictionary-project/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Definition from \"./Definition\";\nimport Photos from \"./Photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [searchResult, setSearchResult] = useState(props.defaultWord);\n  let [definition, setDefinition] = useState(null);\n  let [photos, setPhotos] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleDefinitionResponse(response) {\n    setDefinition(response.data[0]);\n  }\n\n  function handlePhotoResponse(response) {\n    console.log(response.data.photos);\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${searchResult}`;\n    axios.get(apiUrl).then(handleDefinitionResponse);\n    let pexelApiKey = \"563492ad6f917000010000010d614906c92a4872b284a07aeee0c7d4\";\n    let headers = {\n      Authorization: `Bearer ${pexelApiKey}`\n    };\n    let pexelApiUrl = `https://api.pexels.com/v1/search?query=${searchResult}&per_page=1`;\n    axios.get(pexelApiUrl, {\n      headers: headers\n    }).then(handlePhotoResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleSearchResult(event) {\n    setSearchResult(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"What word are you searching for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleSearchResult,\n            autoFocus: true,\n            defaultValue: props.defaultWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Definition, {\n        definition: definition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n\n_s(Dictionary, \"Ug1l0rXRX9e3DXrQ1kal8XFu9SI=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/lucyshaw/Documents/GitHub/dictionary-project/src/Dictionary.js"],"names":["React","useState","axios","Definition","Photos","Dictionary","props","searchResult","setSearchResult","defaultWord","definition","setDefinition","photos","setPhotos","loaded","setLoaded","handleDefinitionResponse","response","data","handlePhotoResponse","console","log","search","apiUrl","get","then","pexelApiKey","headers","Authorization","pexelApiUrl","handleSubmit","event","preventDefault","handleSearchResult","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAACK,KAAK,CAACG,WAAP,CAA9C;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAI,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,MAAI,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASe,wBAAT,CAAkCC,QAAlC,EAA4C;AAC1CN,IAAAA,aAAa,CAACM,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAb;AACD;;AACD,WAASC,mBAAT,CAA6BF,QAA7B,EAAuC;AACrCG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcN,MAA1B;AACAC,IAAAA,SAAS,CAACI,QAAQ,CAACC,IAAT,CAAcN,MAAf,CAAT;AACD;;AACD,WAASU,MAAT,GAAkB;AAChB,QAAIC,MAAM,GAAI,mDAAkDhB,YAAa,EAA7E;AACAL,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBT,wBAAvB;AAEA,QAAIU,WAAW,GACb,0DADF;AAEA,QAAIC,OAAO,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASF,WAAY;AAAvC,KAAd;AACA,QAAIG,WAAW,GAAI,0CAAyCtB,YAAa,aAAzE;AACAL,IAAAA,KAAK,CAACsB,GAAN,CAAUK,WAAV,EAAuB;AAAEF,MAAAA,OAAO,EAAEA;AAAX,KAAvB,EAA6CF,IAA7C,CAAkDN,mBAAlD;AACD;;AACD,WAASW,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,MAAM;AACP;;AAED,WAASW,kBAAT,CAA4BF,KAA5B,EAAmC;AACjCvB,IAAAA,eAAe,CAACuB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAf;AACD;;AACD,WAASC,IAAT,GAAgB;AACdrB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,MAAM;AACP;;AACD,MAAIR,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEgB,YAAhB;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,EAAEG,kBAFZ;AAGE,YAAA,SAAS,EAAE,IAHb;AAIE,YAAA,YAAY,EAAE3B,KAAK,CAACG;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GAnBD,MAmBO;AACLwB,IAAAA,IAAI;AACJ,WAAO,SAAP;AACD;AACF;;GA1DuB/B,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Definition from \"./Definition\";\nimport Photos from \"./Photos\";\n\nexport default function Dictionary(props) {\n  let [searchResult, setSearchResult] = useState(props.defaultWord);\n  let [definition, setDefinition] = useState(null);\n  let [photos, setPhotos] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleDefinitionResponse(response) {\n    setDefinition(response.data[0]);\n  }\n  function handlePhotoResponse(response) {\n    console.log(response.data.photos);\n    setPhotos(response.data.photos);\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${searchResult}`;\n    axios.get(apiUrl).then(handleDefinitionResponse);\n\n    let pexelApiKey =\n      \"563492ad6f917000010000010d614906c92a4872b284a07aeee0c7d4\";\n    let headers = { Authorization: `Bearer ${pexelApiKey}` };\n    let pexelApiUrl = `https://api.pexels.com/v1/search?query=${searchResult}&per_page=1`;\n    axios.get(pexelApiUrl, { headers: headers }).then(handlePhotoResponse);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleSearchResult(event) {\n    setSearchResult(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return (\n      <div className=\"container\">\n        <section>\n          <h2 className=\"title\">What word are you searching for?</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              onChange={handleSearchResult}\n              autoFocus={true}\n              defaultValue={props.defaultWord}\n            />\n          </form>\n        </section>\n\n        <Definition definition={definition} />\n        <Photos photos={photos} />\n      </div>\n    );\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}