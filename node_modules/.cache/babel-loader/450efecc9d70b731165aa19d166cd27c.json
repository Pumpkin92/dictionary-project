{"ast":null,"code":"var _jsxFileName = \"/Users/lucyshaw/Documents/GitHub/dictionary-project/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Definition from \"./Definition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [searchResult, setSearchResult] = useState(props.defaultWord);\n  let [definition, setDefinition] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleResponse(response) {\n    setDefinition(response.data[0]);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${searchResult}`;\n    axios.get(apiUrl).then(handleResponse);\n    const pexelApiKey = \"https://thirsty-wescoff-770c2e.netlify.app/\";\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleSearchResult(event) {\n    setSearchResult(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"What word are you searching for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: handleSearchResult,\n            autoFocus: true,\n            defaultValue: props.defaultWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Definition, {\n        definition: definition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n\n_s(Dictionary, \"vDRe3DvCb0f2J0GRHaWEy/z9pFs=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/lucyshaw/Documents/GitHub/dictionary-project/src/Dictionary.js"],"names":["React","useState","axios","Definition","Dictionary","props","searchResult","setSearchResult","defaultWord","definition","setDefinition","loaded","setLoaded","handleResponse","response","data","search","apiUrl","get","then","pexelApiKey","handleSubmit","event","preventDefault","handleSearchResult","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACI,KAAK,CAACG,WAAP,CAA9C;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAI,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASY,cAAT,CAAwBC,QAAxB,EAAkC;AAChCJ,IAAAA,aAAa,CAACI,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAb;AACD;;AACD,WAASC,MAAT,GAAkB;AAChB,QAAIC,MAAM,GAAI,mDAAkDX,YAAa,EAA7E;AACAJ,IAAAA,KAAK,CAACgB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBN,cAAvB;AAEA,UAAMO,WAAW,GAAG,6CAApB;AACD;;AACD,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,MAAM;AACP;;AAED,WAASQ,kBAAT,CAA4BF,KAA5B,EAAmC;AACjCf,IAAAA,eAAe,CAACe,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAf;AACD;;AACD,WAASC,IAAT,GAAgB;AACdf,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,MAAM;AACP;;AACD,MAAIL,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEU,YAAhB;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,EAAEG,kBAFZ;AAGE,YAAA,SAAS,EAAE,IAHb;AAIE,YAAA,YAAY,EAAEnB,KAAK,CAACG;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACLkB,IAAAA,IAAI;AACJ,WAAO,SAAP;AACD;AACF;;GAhDuBvB,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Definition from \"./Definition\";\n\nexport default function Dictionary(props) {\n  let [searchResult, setSearchResult] = useState(props.defaultWord);\n  let [definition, setDefinition] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n\n  function handleResponse(response) {\n    setDefinition(response.data[0]);\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${searchResult}`;\n    axios.get(apiUrl).then(handleResponse);\n\n    const pexelApiKey = \"https://thirsty-wescoff-770c2e.netlify.app/\";\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleSearchResult(event) {\n    setSearchResult(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  if (loaded) {\n    return (\n      <div className=\"container\">\n        <section>\n          <h2 className=\"title\">What word are you searching for?</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              onChange={handleSearchResult}\n              autoFocus={true}\n              defaultValue={props.defaultWord}\n            />\n          </form>\n        </section>\n\n        <Definition definition={definition} />\n      </div>\n    );\n  } else {\n    load();\n    return \"loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}